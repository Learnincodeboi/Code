 
Option Explicit

Sub SendEmailWithScreenshots()
    Dim OutApp As Object
    Dim OutMail As Object
    Dim TempFilePath As String
    Dim TempFileName As String
    Dim FullTempFilePath As String
    Dim Wb As Workbook
    Dim ws As Worksheet
    Dim rng1 As Range
    Dim rng2 As Range
    Dim PPT As Object
    Dim PPTPresentation As Object
    Dim PPTSlide As Object
    Dim myChart As Object
    Dim imgPath As String

    ' Update BQL formulas
    On Error Resume Next
    Application.Run "RefreshAllBQLQueries"
    On Error GoTo 0

    ' Create a temporary file to store the print view
    Set Wb = ActiveWorkbook
    TempFilePath = Environ$("temp") & "\"
    TempFileName = "PrintView.pdf"
    FullTempFilePath = TempFilePath & TempFileName

    ' Set the print area to the first range and format the PDF in landscape mode
    Set ws = ActiveSheet
    With ws.PageSetup
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
        .Orientation = xlLandscape
        .PrintArea = "G10:X55"
    End With

    ' Create a new PowerPoint presentation and add the first range to the first slide
    Set PPT = CreateObject("PowerPoint.Application")
    Set PPTPresentation = PPT.Presentations.Add
    Set PPTSlide = PPTPresentation.Slides.Add(1, 11)
    Set rng1 = ws.Range("G10:X55")
    rng1.CopyPicture Appearance:=xlScreen, Format:=xlPicture
    With PPTSlide
        .Shapes.PasteSpecial(DataType:=2, Link:=False)
        .Shapes(1).LockAspectRatio = msoTrue
        .Shapes(1).Top = (.Parent.Height - .Shapes(1).Height) / 2
        .Shapes(1).Left = (.Parent.Width - .Shapes(1).Width) / 2
    End With

    ' Set the print area to the second range and format the PDF in landscape mode
    With ws.PageSetup
        .PrintArea = "G56:X98"
    End With
    ' Add the second range to a new slide in the PowerPoint presentation
    Set PPTSlide = PPTPresentation.Slides.Add(2, 11)
    Set rng2 = ws.Range("G56:X98")
    rng2.CopyPicture Appearance:=xlScreen, Format:=xlPicture
    With PPTSlide
        .Shapes.PasteSpecial(DataType:=2, Link:=False)
        .Shapes(1).LockAspectRatio = msoTrue
        .Shapes(1).Top = (.Parent.Height - .Shapes(1).Height) / 2
        .Shapes(1).Left = (.Parent.Width - .Shapes(1).Width) / 2
    End With

    ' Save the PowerPoint presentation as a PDF
    PPTPresentation.SaveAs FullTempFilePath, 32

    ' Create a new email message
    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)

    ' Add the PDF file and screenshots as attachments
    With OutMail
        .To = "nburhance@gmail.com"
  

     .Subject = "Print View of Workbook"
        .Attachments.Add FullTempFilePath
        .Display

        ' Add the screenshot of G10:X98 to the email body
        imgPath = Environ$("temp") & "\RangeG10_X98.png"
        ws.Range("G10:X98").CopyPicture Appearance:=xlScreen, Format:=xlBitmap
        SavePicture ws.Range("G10:X98").CopyPicture, imgPath
        Set myChart = .GetInspector.WordEditor.Shapes.AddPicture(imgPath, False, True, 0, 0, -1, -1)
        myChart.Select
        .GetInspector.WordEditor.Application.Selection.Range(0, 0).InlineShapes(1).Height = 200
        .GetInspector.WordEditor.Application.Selection.Range(0, 0).InlineShapes(1).Width = 400

        ' Send the email
        .Send
    End With

    ' Clean up
    ' Close the PowerPoint presentation and quit PowerPoint
    PPTPresentation.Close
    PPT.Quit

End Sub
Option Explicit

Sub SendEmailWithScreenshots()
    Dim OutApp As Object
    Dim OutMail As Object
    Dim TempFilePath As String
    Dim TempFileName As String
    Dim FullTempFilePath As String
    Dim Wb As Workbook
    Dim ws As Worksheet
    Dim rng1 As Range
    Dim rng2 As Range
    Dim PPT As Object
    Dim PPTPresentation As Object
    Dim PPTSlide As Object
    Dim myChart As Object
    Dim imgPath As String
    Dim imgChart As Object
    Dim shp As Object
    Dim FSO As Object
    Dim tempFolder As Object
    Dim tempFilePath As String
    Dim NewPDF As Object
    Dim AVDoc As Object

    ' Update BQL formulas
    On Error Resume Next
    Application.Run "RefreshAllBQLQueries"
    On Error GoTo 0

    ' Create a temporary file to store the print view
    Set Wb = ActiveWorkbook
    TempFilePath = Environ$("temp") & "\"
    TempFileName = "PrintView.pdf"
    FullTempFilePath = TempFilePath & TempFileName

    ' Set the print area to the first range and format the PDF in landscape mode
    Set ws = ActiveSheet
    With ws.PageSetup
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
        .Orientation = xlLandscape
        .PrintArea = "G10:X55"
    End With

    ' Create a new PowerPoint presentation and add the first range to the first slide
    Set PPT = CreateObject("PowerPoint.Application")
    Set PPTPresentation = PPT.Presentations.Add
    Set PPTSlide = PPTPresentation.Slides.Add(1, 11)
    Set rng1 = ws.Range("G10:X55")
    rng1.CopyPicture Appearance:=xlScreen, Format:=xlPicture
    With PPTSlide
        .Shapes.PasteSpecial(DataType:=2, Link:=False)
        .Shapes(1).LockAspectRatio = msoTrue
        .Shapes(1).Top = (.Parent.Height - .Shapes(1).Height) / 2
        .Shapes(1).Left = (.Parent.Width - .Shapes(1).Width) / 2
    End With

    ' Set the print area to the second range and format the PDF in landscape mode
    With ws.PageSetup
        .PrintArea = "G56:X98"
    End With

    ' Add the second range to a new slide in the PowerPoint presentation
    Set PPTSlide = PPTPresentation.Slides.Add(2, 11)
    Set rng2 = ws.Range("G56:X98")
    rng2.CopyPicture Appearance:=xlScreen, Format:=xlPicture
    With PPTSlide
        .Shapes.PasteSpecial(DataType:=2, Link:=False)
        .Shapes(1).LockAspectRatio = msoTrue
        .Shapes(1).Top = (.Parent.Height - .Shapes(1).Height) / 2
	.Shapes(1).Left = (.Parent.Width - .Shapes(1).Width) / 2
	    End With

    ' Save the PowerPoint presentation as a PDF
    PPTPresentation.SaveAs FullTempFilePath, 32

    ' Create a new email message
    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)

    ' Add the PDF file and screenshots as attachments
    With OutMail
        .To = "nburhance@gmail.com"
        .Subject = "Print View of Workbook"
        .Attachments.Add FullTempFilePath
        .Display

        ' Add the screenshot of G10:X98 to the email body
        imgPath = Environ$("temp") & "\RangeG10_X98.png"
        ws.Range("G10:X98").CopyPicture Appearance:=xlScreen, Format:=xlBitmap
        SavePicture ws.Range("G10:X98").CopyPicture, imgPath
        Set myChart = .GetInspector.WordEditor.Shapes.AddPicture(imgPath, False, True, 0, 0, -1, -1)
        myChart.Select
        .GetInspector.WordEditor.Application.Selection.Range(0, 0).InlineShapes(1).Height = 200
        .GetInspector.WordEditor.Application.Selection.Range(0, 0).InlineShapes(1).Width = 400

        ' Send the email
        .Send
    End With

    ' Clean up
    ' Close the PowerPoint presentation and quit PowerPoint
    PPTPresentation.Close
    PPT.Quit

End Sub
